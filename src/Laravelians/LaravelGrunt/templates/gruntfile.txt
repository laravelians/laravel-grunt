module.exports = function (grunt) {
	
	// Initialize configuration object
	grunt.initConfig({

		// Read in project settings
		pkg: grunt.file.readJSON('package.json'),

		// Project settings & variables (can be added, edited and removed)
		options: {
			base: '{{assets_path}}',
			clean: {
				files: ['<%= options.css.min %>', '<%= options.less.compiled %>', '<%= options.js.min %>', '<%= options.js.concat %>', '<%= options.css.concat %>']
			},
			css: {
				base: '<%= options.base %>{{css_path}}',
				files: {{css_files}},
				concat: '<%= options.css.base %>/concat.css',
				min: '<%= options.css.base %>/style.min.css'
			},
			js: {
				base: '<%= options.base %>{{js_path}}',
				files: {{js_files}},
				concat: '<%= options.js.base %>/concat.js',
				min: '<%= options.js.base %>/script.min.js'
			},
			less: {
				base: '<%= options.base %>{{less_path}}',
				file: '<%= options.less.base %>{{less_file}}',
				compiled: '<%= options.css.base %>/less.css'
			},
			notify: {
				watch: {
					title: 'Live Reloaded!',
					message: 'Files were modified, recompiled and site reloaded'
				}
			},
			phpunit: {

			},
			sass: {
				base: '<%= opts.base %>{{sass_path}}',
				files: '<%= options.sass.base %>{{sass_file}}',
				compiled: '<%= opts.css.base %>/sass.css'
			},
			stylus: {
				base: '<%= opts.base %>{{stylus_path}}',
				files: '<%= options.stylus.base %>{{stylus_file}}',
				compiled: '<%= opts.css.base %>/stylus.css'
			},
			watch: {
				files: ['']
			}
		},

		// Clean files and folders before replacement
		clean: {
			all: {
				src: ['<%= options.clean.files %>']
			},
			concat: {
				src: ['<%= options.js.concat %>', '<%= options.css.concat %>']
			}
		},

		// Concatenate javascript files
		concat: {
			js: {
				options: {
					separator: ';',
					block: true,
					line: true,
					stripBanners: true
				},
				files: {
					'<%= options.js.concat %>' : ['<%= options.js.files %>']
				}
			},
			css: {
				files: {
					'<%= options.css.concat %>' : ['<%= options.css.files %>']
				}
			}
		},

		// Minify and concatenate CSS files
		cssmin: {
			dist: {
		       		src: ['<%= options.css.concat %>'],
			        	dest: '<%= options.css.min %>'
			}
		},

		// Javascript linting - JS Hint
		jshint: {
			files: {
				cwd: '<%= options.js.base %>',
				src: '<%= options.js.files %>'
			},
			options: {
				// Options to override JSHint defaults
				curly: true,
				indent: 4,
				trailing: true,
				devel: true,
				globals: {
					jQuery: true
				}
			}
		},

		// Compile LESS files
		less: {
			options: {
				yuicompress: true,
				ieCompat: true
			},
			files: {
				'<%= options.less.compiled %>': '<%= options.less.files %>'
			}
		},

		// Display notifications
		notify: {
			watch: {
				options: {
					title: '<%= options.notify.watch.title %>',
					message: '<%= options.notify.watch.message %>'
				}
			}
		},

		// PHPUnit tests
		phpunit: {
			classes: {
				dir: '/'
			}
		},

		// SASS preprocessing
		sass: {
			dist: {
				files: {
					'<%= options.sass.compiled %>' : '<%= options.sass.files %>'
				}
			}
		},

		// Stylus preprocessing
		stylus: {

		},

		// Javascript minification - uglify
		uglify: {
			options: {
				preserveComments: false,
			},
			dist: {
				files: {
					'<%= options.js.min %>' : ['<%= options.js.concat %>']
				}
			}
		},

		// Watch for files and folder changes
		watch: {
			options: {
				livereload: true
			},
			files: '<%= options.watch.files %>',
			tasks: ['default', 'notify:watch']
		}

	});

	// Load npm tasks
	grunt.loadNpmTasks('grunt-contrib-clean');
	grunt.loadNpmTasks('grunt-contrib-compress');
	grunt.loadNpmTasks('grunt-contrib-concat');
	grunt.loadNpmTasks('grunt-contrib-cssmin');
	grunt.loadNpmTasks('grunt-contrib-jshint');
	grunt.loadNpmTasks('grunt-contrib-less');
	grunt.loadNpmTasks('grunt-contrib-livereload');
	grunt.loadNpmTasks('grunt-contrib-uglify');
	grunt.loadNpmTasks('grunt-contrib-watch');
	grunt.loadNpmTasks('grunt-contrib-sass');
	grunt.loadNpmTasks('grunt-contrib-stylus');
	grunt.loadNpmTasks('grunt-notify');
	grunt.loadNpmTasks('grunt-phpunit');

	// Register tasks
	{{default_task}}
}